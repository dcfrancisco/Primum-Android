/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.primus.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.primus.model.Patient;
import com.primus.model.PatientModel;
import com.primus.model.PatientSoap;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * The base model implementation for the Patient service. Represents a row in the &quot;Primus_Patient&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.primus.model.PatientModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PatientImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a patient model instance should use the {@link com.primus.model.Patient} interface instead.
 * </p>
 *
 * @author Juan Fern√°ndez
 * @see PatientImpl
 * @see com.primus.model.Patient
 * @see com.primus.model.PatientModel
 * @generated
 */
public class PatientModelImpl extends BaseModelImpl<Patient>
	implements PatientModel {
	public static final String TABLE_NAME = "Primus_Patient";
	public static final Object[][] TABLE_COLUMNS = {
			{ "patientId", new Integer(Types.BIGINT) },
			{ "companyId", new Integer(Types.BIGINT) },
			{ "groupId", new Integer(Types.BIGINT) },
			{ "creatorUserId", new Integer(Types.BIGINT) },
			{ "createDate", new Integer(Types.TIMESTAMP) },
			{ "modifiedDate", new Integer(Types.TIMESTAMP) },
			{ "name", new Integer(Types.VARCHAR) },
			{ "surname1", new Integer(Types.VARCHAR) },
			{ "surname2", new Integer(Types.VARCHAR) },
			{ "id_", new Integer(Types.VARCHAR) },
			{ "birthDate", new Integer(Types.TIMESTAMP) }
		};
	public static final String TABLE_SQL_CREATE = "create table Primus_Patient (patientId LONG not null primary key,companyId LONG,groupId LONG,creatorUserId LONG,createDate DATE null,modifiedDate DATE null,name VARCHAR(75) null,surname1 VARCHAR(75) null,surname2 VARCHAR(75) null,id_ VARCHAR(75) null,birthDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Primus_Patient";
	public static final String ORDER_BY_JPQL = " ORDER BY patient.surname1 ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Primus_Patient.surname1 ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.primus.model.Patient"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.primus.model.Patient"),
			true);

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Patient toModel(PatientSoap soapModel) {
		Patient model = new PatientImpl();

		model.setPatientId(soapModel.getPatientId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setCreatorUserId(soapModel.getCreatorUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setName(soapModel.getName());
		model.setSurname1(soapModel.getSurname1());
		model.setSurname2(soapModel.getSurname2());
		model.setId(soapModel.getId());
		model.setBirthDate(soapModel.getBirthDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Patient> toModels(PatientSoap[] soapModels) {
		List<Patient> models = new ArrayList<Patient>(soapModels.length);

		for (PatientSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.primus.model.Patient"));

	public PatientModelImpl() {
	}

	public long getPrimaryKey() {
		return _patientId;
	}

	public void setPrimaryKey(long pk) {
		setPatientId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_patientId);
	}

	public long getPatientId() {
		return _patientId;
	}

	public void setPatientId(long patientId) {
		_patientId = patientId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	public long getCreatorUserId() {
		return _creatorUserId;
	}

	public void setCreatorUserId(long creatorUserId) {
		_creatorUserId = creatorUserId;
	}

	public String getCreatorUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreatorUserId(), "uuid",
			_creatorUserUuid);
	}

	public void setCreatorUserUuid(String creatorUserUuid) {
		_creatorUserUuid = creatorUserUuid;
	}

	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	public String getSurname1() {
		if (_surname1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _surname1;
		}
	}

	public void setSurname1(String surname1) {
		_surname1 = surname1;
	}

	public String getSurname2() {
		if (_surname2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _surname2;
		}
	}

	public void setSurname2(String surname2) {
		_surname2 = surname2;
	}

	public String getId() {
		if (_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _id;
		}
	}

	public void setId(String id) {
		if (_originalId == null) {
			_originalId = _id;
		}

		_id = id;
	}

	public String getOriginalId() {
		return GetterUtil.getString(_originalId);
	}

	public Date getBirthDate() {
		return _birthDate;
	}

	public void setBirthDate(Date birthDate) {
		_birthDate = birthDate;
	}

	public Patient toEscapedModel() {
		if (isEscapedModel()) {
			return (Patient)this;
		}
		else {
			return (Patient)Proxy.newProxyInstance(Patient.class.getClassLoader(),
				new Class[] { Patient.class }, new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					Patient.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		PatientImpl patientImpl = new PatientImpl();

		patientImpl.setPatientId(getPatientId());

		patientImpl.setCompanyId(getCompanyId());

		patientImpl.setGroupId(getGroupId());

		patientImpl.setCreatorUserId(getCreatorUserId());

		patientImpl.setCreateDate(getCreateDate());

		patientImpl.setModifiedDate(getModifiedDate());

		patientImpl.setName(getName());

		patientImpl.setSurname1(getSurname1());

		patientImpl.setSurname2(getSurname2());

		patientImpl.setId(getId());

		PatientModelImpl patientModelImpl = patientImpl;

		patientModelImpl._originalId = patientModelImpl._id;

		patientImpl.setBirthDate(getBirthDate());

		return patientImpl;
	}

	public int compareTo(Patient patient) {
		int value = 0;

		value = getSurname1().compareTo(patient.getSurname1());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Patient patient = null;

		try {
			patient = (Patient)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = patient.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{patientId=");
		sb.append(getPatientId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", creatorUserId=");
		sb.append(getCreatorUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", surname1=");
		sb.append(getSurname1());
		sb.append(", surname2=");
		sb.append(getSurname2());
		sb.append(", id=");
		sb.append(getId());
		sb.append(", birthDate=");
		sb.append(getBirthDate());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.primus.model.Patient");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>patientId</column-name><column-value><![CDATA[");
		sb.append(getPatientId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorUserId</column-name><column-value><![CDATA[");
		sb.append(getCreatorUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surname1</column-name><column-value><![CDATA[");
		sb.append(getSurname1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surname2</column-name><column-value><![CDATA[");
		sb.append(getSurname2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birthDate</column-name><column-value><![CDATA[");
		sb.append(getBirthDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _patientId;
	private long _companyId;
	private long _groupId;
	private long _creatorUserId;
	private String _creatorUserUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private String _name;
	private String _surname1;
	private String _surname2;
	private String _id;
	private String _originalId;
	private Date _birthDate;
	private transient ExpandoBridge _expandoBridge;
}